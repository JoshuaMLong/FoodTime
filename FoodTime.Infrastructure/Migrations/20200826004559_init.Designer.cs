// <auto-generated />
using System;
using FoodTime.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodTime.Infrastructure.Migrations
{
    [DbContext(typeof(FoodTimeContext))]
    [Migration("20200826004559_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodTime.Infrastructure.Models.Pastry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PastryDoughId")
                        .HasColumnType("int");

                    b.Property<int>("PastryFillingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PastryDoughId");

                    b.HasIndex("PastryFillingId", "PastryDoughId");

                    b.ToTable("Pastry");
                });

            modelBuilder.Entity("FoodTime.Infrastructure.Models.PastryDough", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PastryDough");
                });

            modelBuilder.Entity("FoodTime.Infrastructure.Models.PastryFilling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PastryFilling");
                });

            modelBuilder.Entity("FoodTime.Infrastructure.Models.PastryType", b =>
                {
                    b.Property<int>("PastryFillingId")
                        .HasColumnType("int");

                    b.Property<int>("PastryDoughId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("PastryFillingId", "PastryDoughId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("PastryDoughId");

                    b.ToTable("PastryType");
                });

            modelBuilder.Entity("FoodTime.Infrastructure.Models.Pastry", b =>
                {
                    b.HasOne("FoodTime.Infrastructure.Models.PastryDough", "PastryDough")
                        .WithMany()
                        .HasForeignKey("PastryDoughId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodTime.Infrastructure.Models.PastryFilling", "PastryFilling")
                        .WithMany()
                        .HasForeignKey("PastryFillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodTime.Infrastructure.Models.PastryType", b =>
                {
                    b.HasOne("FoodTime.Infrastructure.Models.PastryDough", "PastryDough")
                        .WithMany()
                        .HasForeignKey("PastryDoughId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodTime.Infrastructure.Models.PastryFilling", "PastryFilling")
                        .WithMany()
                        .HasForeignKey("PastryFillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
